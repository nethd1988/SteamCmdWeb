@page
@model SteamCmdWeb.Pages.ProfilesModel
@{
    ViewData["Title"] = "Danh sách Profile";
}

<div class="card mb-4">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">
            <i class="bi bi-list-check me-2"></i>
            Danh sách Profile Game
        </h5>
        <div>
            <button id="refreshBtn" class="btn btn-outline-primary btn-sm me-2">
                <i class="bi bi-arrow-clockwise me-1"></i> Làm mới
            </button>
            <a href="/AppProfiles" class="btn btn-primary btn-sm">
                <i class="bi bi-grid-3x3-gap me-1"></i> Xem dạng lưới
            </a>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover" id="profilesTable">
                <thead>
                    <tr>
                        <th style="width: 50px;">#</th>
                        <th>Tên Game</th>
                        <th>App ID</th>
                        <th>Đường dẫn</th>
                        <th style="width: 120px;">Trạng thái</th>
                        <th style="width: 150px;">Chạy lần cuối</th>
                        <th style="width: 120px;">Thao tác</th>
                    </tr>
                </thead>
                <tbody id="profilesList">
                    <tr>
                        <td colspan="7" class="text-center">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Đang tải...</span>
                            </div>
                            <p class="mt-2">Đang tải danh sách profile...</p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content bg-dark">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmModalLabel">Xác nhận xóa</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa game profile "<span id="deleteGameName"></span>"?</p>
                <p class="text-danger">Lưu ý: Hành động này không thể hoàn tác!</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Xóa</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content bg-dark">
            <div class="modal-header">
                <h5 class="modal-title" id="detailsModalLabel">Chi tiết Profile</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <h6>Thông tin chung</h6>
                            <table class="table table-sm table-dark mb-0">
                                <tr><td width="35%">ID:</td><td id="detail-id"></td></tr>
                                <tr><td>Tên Game:</td><td id="detail-name"></td></tr>
                                <tr><td>App ID:</td><td id="detail-appid"></td></tr>
                                <tr><td>Đường dẫn:</td><td id="detail-path"></td></tr>
                            </table>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <h6>Thông tin khác</h6>
                            <table class="table table-sm table-dark mb-0">
                                <tr><td width="35%">Trạng thái:</td><td id="detail-status"></td></tr>
                                <tr><td>Tài khoản:</td><td id="detail-account"></td></tr>
                                <tr><td>Tham số:</td><td id="detail-arguments"></td></tr>
                                <tr><td>Chạy lần cuối:</td><td id="detail-lastrun"></td></tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-info" id="copyProfileBtn">
                    <i class="bi bi-clipboard me-1"></i> Sao chép
                </button>
                <button type="button" class="btn btn-primary" id="editProfileBtn">
                    <i class="bi bi-pencil me-1"></i> Chỉnh sửa
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    let profiles = [];
    let selectedProfile = null;

    function loadProfiles() {
        document.getElementById('profilesList').innerHTML = `
            <tr>
                <td colspan="7" class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Đang tải...</span>
                    </div>
                    <p class="mt-2">Đang tải danh sách profile...</p>
                </td>
            </tr>
        `;

        fetch('/api/appprofiles')
            .then(response => {
                if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
                return response.json();
            })
            .then(data => {
                profiles = data;
                displayProfiles(profiles);
            })
            .catch(error => {
                console.error('Lỗi khi tải profiles:', error);
                document.getElementById('profilesList').innerHTML = `
                    <tr>
                        <td colspan="7" class="text-center text-danger">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>
                            Không thể tải danh sách profiles: ${error.message}
                        </td>
                    </tr>
                `;
            });
    }

    function displayProfiles(data) {
        const tbody = document.getElementById('profilesList');
        tbody.innerHTML = '';

        if (!data || data.length === 0) {
            tbody.innerHTML = `
                <tr>
                    <td colspan="7" class="text-center">
                        <i class="bi bi-info-circle-fill me-2 text-info"></i>
                        Chưa có profile nào.
                    </td>
                </tr>
            `;
            return;
        }

        data.sort((a, b) => a.id - b.id);
        data.forEach(profile => {
            let statusBadge = profile.status === 'Running' ? '<span class="badge bg-success">Đang chạy</span>' :
                             profile.status === 'Ready' ? '<span class="badge bg-primary">Sẵn sàng</span>' :
                             profile.status === 'Stopped' ? '<span class="badge bg-secondary">Đã dừng</span>' :
                             `<span class="badge bg-info">${profile.status || 'Không xác định'}</span>`;

            let lastRunFormatted = profile.lastRun ? new Date(profile.lastRun).toLocaleString('vi-VN') : 'Chưa chạy';
            let truncatedPath = profile.installDirectory && profile.installDirectory.length > 30 
                ? profile.installDirectory.substring(0, 30) + '...' : (profile.installDirectory || 'N/A');

            tbody.innerHTML += `
                <tr>
                    <td>${profile.id}</td>
                    <td class="fw-bold">${profile.name || 'Không có tên'}</td>
                    <td>${profile.appID || 'N/A'}</td>
                    <td title="${profile.installDirectory || ''}">${truncatedPath}</td>
                    <td>${statusBadge}</td>
                    <td>${lastRunFormatted}</td>
                    <td>
                        <div class="btn-group btn-group-sm">
                            <button type="button" class="btn btn-info view-btn" data-id="${profile.id}" title="Xem chi tiết"><i class="bi bi-eye"></i></button>
                            <button type="button" class="btn btn-primary edit-btn" data-id="${profile.id}" title="Chỉnh sửa"><i class="bi bi-pencil"></i></button>
                            <button type="button" class="btn btn-danger delete-btn" data-id="${profile.id}" title="Xóa"><i class="bi bi-trash"></i></button>
                        </div>
                    </td>
                </tr>
            `;
        });

        document.querySelectorAll('.view-btn').forEach(btn => btn.addEventListener('click', () => viewProfileDetails(btn.getAttribute('data-id'))));
        document.querySelectorAll('.edit-btn').forEach(btn => btn.addEventListener('click', () => editProfile(btn.getAttribute('data-id'))));
        document.querySelectorAll('.delete-btn').forEach(btn => btn.addEventListener('click', () => confirmDeleteProfile(btn.getAttribute('data-id'))));
    }

    function viewProfileDetails(id) {
        const profile = profiles.find(p => p.id == id);
        if (!profile) return;

        selectedProfile = profile;
        document.getElementById('detail-id').textContent = profile.id;
        document.getElementById('detail-name').textContent = profile.name || 'Không có tên';
        document.getElementById('detail-appid').textContent = profile.appID || 'N/A';
        document.getElementById('detail-path').textContent = profile.installDirectory || 'N/A';
        document.getElementById('detail-status').textContent = profile.status || 'Không xác định';
        document.getElementById('detail-account').textContent = profile.anonymousLogin ? 'Ẩn danh' : (profile.steamUsername ? 'Có tài khoản' : 'Không có');
        document.getElementById('detail-arguments').textContent = profile.arguments || 'Không có';
        document.getElementById('detail-lastrun').textContent = profile.lastRun ? new Date(profile.lastRun).toLocaleString('vi-VN') : 'Chưa chạy';
        document.getElementById('detailsModalLabel').textContent = `Chi tiết Profile: ${profile.name || 'Không có tên'}`;

        new bootstrap.Modal(document.getElementById('detailsModal')).show();
    }

    function editProfile(id) {
        window.location.href = `/AppProfiles?edit=${id}`;
    }

    function confirmDeleteProfile(id) {
        const profile = profiles.find(p => p.id == id);
        if (!profile) return;

        selectedProfile = profile;
        document.getElementById('deleteGameName').textContent = profile.name || 'Không có tên';
        new bootstrap.Modal(document.getElementById('deleteConfirmModal')).show();
    }

    function deleteProfile() {
        if (!selectedProfile) return;

        const deleteBtn = document.getElementById('confirmDeleteBtn');
        const originalText = deleteBtn.innerHTML;
        deleteBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang xóa...';
        deleteBtn.disabled = true;

        fetch(`/api/appprofiles/${selectedProfile.id}`, { method: 'DELETE' })
            .then(response => {
                if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
                bootstrap.Modal.getInstance(document.getElementById('deleteConfirmModal')).hide();
                showToast(`Đã xóa profile "${selectedProfile.name || 'Không có tên'}" thành công`, 'success');
                loadProfiles();
            })
            .catch(error => {
                console.error('Lỗi khi xóa profile:', error);
                showToast(`Lỗi khi xóa profile: ${error.message}`, 'error');
            })
            .finally(() => {
                deleteBtn.innerHTML = originalText;
                deleteBtn.disabled = false;
            });
    }

    function copyProfile() {
        if (!selectedProfile) return;

        const profileData = {
            id: selectedProfile.id,
            name: selectedProfile.name,
            appID: selectedProfile.appID,
            installDirectory: selectedProfile.installDirectory,
            steamUsername: selectedProfile.steamUsername,
            steamPassword: selectedProfile.steamPassword,
            arguments: selectedProfile.arguments,
            anonymousLogin: selectedProfile.anonymousLogin
        };

        navigator.clipboard.writeText(JSON.stringify(profileData, null, 2))
            .then(() => {
                showToast(`Đã sao chép profile "${selectedProfile.name || 'Không có tên'}"`, 'success');
                bootstrap.Modal.getInstance(document.getElementById('detailsModal')).hide();
            })
            .catch(err => showToast(`Lỗi khi sao chép: ${err}`, 'error'));
    }

    function showToast(message, type) {
        const toast = document.createElement('div');
        toast.classList.add('position-fixed', 'bottom-0', 'end-0', 'p-3');
        toast.style.zIndex = 1070;
        toast.innerHTML = `
            <div class="toast align-items-center text-white ${type === 'success' ? 'bg-success' : 'bg-danger'}" role="alert">
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="bi bi-${type === 'success' ? 'check-circle-fill' : 'exclamation-triangle-fill'} me-2"></i>
                        ${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        `;
        document.body.appendChild(toast);
        new bootstrap.Toast(toast.querySelector('.toast'), { delay: 3000 }).show();
    }

    document.addEventListener('DOMContentLoaded', () => {
        loadProfiles();
        document.getElementById('refreshBtn').addEventListener('click', loadProfiles);
        document.getElementById('confirmDeleteBtn').addEventListener('click', deleteProfile);
        document.getElementById('editProfileBtn').addEventListener('click', () => selectedProfile && editProfile(selectedProfile.id));
        document.getElementById('copyProfileBtn').addEventListener('click', copyProfile);
    });
</script>
}