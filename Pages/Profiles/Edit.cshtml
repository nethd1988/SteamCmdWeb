@page "{id:int}"
@model SteamCmdWeb.Pages.Profiles.EditModel
@{
    ViewData["Title"] = "Chỉnh sửa Profile";
}

<div class="container">
    <div class="mb-4">
        <h1>Chỉnh sửa Profile</h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
                <li class="breadcrumb-item"><a href="/Profiles">Profiles</a></li>
                <li class="breadcrumb-item active">Chỉnh sửa</li>
            </ol>
        </nav>
    </div>

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @Model.ErrorMessage
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
    }

    <div class="card">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">
                <i class="bi bi-pencil-square me-2"></i>
                Chỉnh sửa profile: @Model.Profile.Name
            </h5>
        </div>
        <div class="card-body">
            <form method="post">
                <input type="hidden" asp-for="Profile.Id" />
                <input type="hidden" asp-for="Profile.Status" />
                <input type="hidden" asp-for="Profile.Pid" />
                <input type="hidden" asp-for="Profile.StartTime" />
                <input type="hidden" asp-for="Profile.StopTime" />
                <input type="hidden" asp-for="Profile.LastRun" />

                <div class="mb-3">
                    <label asp-for="Profile.Name" class="form-label">Tên Profile <span class="text-danger">*</span></label>
                    <input asp-for="Profile.Name" class="form-control" required />
                    <span asp-validation-for="Profile.Name" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Profile.AppID" class="form-label">App IDs (cách nhau bởi dấu phẩy)</label>
                    <input asp-for="Profile.AppID" class="form-control" placeholder="VD: 570,730,440" id="appIdInput" />
                    <div id="gameNames" class="form-text mt-2"></div>
                </div>
                <div class="d-flex justify-content-end">
                    <a href="/Profiles" class="btn btn-secondary me-2">Hủy</a>
                    <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Chờ trang tải xong
        document.addEventListener('DOMContentLoaded', function () {
            const appIdInput = document.getElementById('appIdInput');
            const gameNamesDiv = document.getElementById('gameNames');
            
            // Hiển thị tên game khi trang tải
            if (appIdInput.value) {
                fetchGameNames(appIdInput.value);
            }
            
            // Thêm event cho input AppID
            appIdInput.addEventListener('blur', function() {
                fetchGameNames(this.value);
            });
            
            // Hàm lấy tên game từ AppID
            function fetchGameNames(appIds) {
                if (!appIds) {
                    gameNamesDiv.innerHTML = '';
                    return;
                }
                
                // Xóa khoảng trắng và tách theo dấu phẩy
                const appIdArray = appIds.split(',').map(id => id.trim()).filter(id => id);
                
                // Nếu không có AppID hợp lệ
                if (appIdArray.length === 0) {
                    gameNamesDiv.innerHTML = '';
                    return;
                }
                
                // Hiển thị đang tải
                gameNamesDiv.innerHTML = '<div class="spinner-border spinner-border-sm text-primary" role="status"><span class="visually-hidden">Đang tải...</span></div> Đang tải thông tin game...';
                
                // Mảng chứa promises
                const promises = appIdArray.map(appId => {
                    return fetch(`/api/SteamApps/name/${appId}`)
                        .then(response => response.json())
                        .then(data => {
                            return { appId: data.appId, name: data.name };
                        })
                        .catch(error => {
                            console.error('Error fetching game name:', error);
                            return { appId: appId, name: appId };
                        });
                });
                
                // Xử lý tất cả promises
                Promise.all(promises)
                    .then(results => {
                        gameNamesDiv.innerHTML = '';
                        
                        // Tạo danh sách tên game
                        if (results.length > 0) {
                            const ul = document.createElement('ul');
                            ul.className = 'list-group mt-2';
                            
                            results.forEach(result => {
                                const li = document.createElement('li');
                                li.className = 'list-group-item d-flex justify-content-between align-items-center p-2';
                                li.innerHTML = `
                                    <span><strong>${result.appId}</strong>: ${result.name}</span>
                                `;
                                ul.appendChild(li);
                            });
                            
                            gameNamesDiv.appendChild(ul);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        gameNamesDiv.innerHTML = '<div class="text-danger">Có lỗi xảy ra khi tải thông tin game</div>';
                    });
            }
        });
    </script>
}