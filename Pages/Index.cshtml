@page
@model SteamCmdWeb.Pages.IndexModel
@{
    ViewData["Title"] = "Trang chủ";
}

<div class="row">
    <div class="col-md-12">
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="bi bi-info-circle me-2"></i>
                    Thông tin hệ thống
                </h5>
            </div>
            <div class="card-body">
                <div class="server-status @(Model.IsServerRunning ? "online" : "offline")">
                    <span class="status-indicator @(Model.IsServerRunning ? "online" : "offline")"></span>
                    <strong>Trạng thái Server:</strong> @(Model.IsServerRunning ? "Đang hoạt động" : "Đã dừng")
                    @if (Model.IsServerRunning)
                    {
                        <span class="ms-3">
                            <strong>Cổng:</strong> 61188
                        </span>
                    }
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <strong>Tổng số Profiles:</strong> <span id="profileCount">...</span>
                        </div>
                        <div class="mb-3">
                            <strong>Thời gian hoạt động:</strong> @Model.Uptime
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <strong>Phiên bản:</strong> 1.0.0
                        </div>
                        <div class="mb-3">
                            <strong>Thời gian khởi động:</strong> @Model.StartTime
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="bi bi-activity me-2"></i>
                    Hoạt động gần đây
                </h5>
            </div>
            <div class="card-body">
                <div class="log-window" id="activityLog">
                    Đang tải nhật ký hoạt động...
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    // Lấy số lượng profiles
    function loadProfileCount() {
        fetch('/api/profiles')
            .then(response => response.json())
            .then(data => {
                document.getElementById('profileCount').textContent = data.length;
            })
            .catch(error => {
                document.getElementById('profileCount').textContent = 'Lỗi tải dữ liệu';
                console.error('Lỗi:', error);
            });
    }
    
    // Mô phỏng nhật ký hoạt động
    function loadActivityLog() {
        // Thông tin giả lập cho mục đích demo
        const logEntries = [
            { timestamp: '@DateTime.Now.AddMinutes(-45).ToString("yyyy-MM-dd HH:mm:ss")', message: 'Server khởi động thành công' },
            { timestamp: '@DateTime.Now.AddMinutes(-30).ToString("yyyy-MM-dd HH:mm:ss")', message: 'Client 192.168.1.100 đã kết nối' },
            { timestamp: '@DateTime.Now.AddMinutes(-29).ToString("yyyy-MM-dd HH:mm:ss")', message: 'Client 192.168.1.100 đã yêu cầu danh sách profiles' },
            { timestamp: '@DateTime.Now.AddMinutes(-25).ToString("yyyy-MM-dd HH:mm:ss")', message: 'Client 192.168.1.100 đã ngắt kết nối' },
            { timestamp: '@DateTime.Now.AddMinutes(-10).ToString("yyyy-MM-dd HH:mm:ss")', message: 'Client 192.168.1.150 đã kết nối' },
            { timestamp: '@DateTime.Now.AddMinutes(-5).ToString("yyyy-MM-dd HH:mm:ss")', message: 'Client 192.168.1.150 đã ngắt kết nối' }
        ];
        
        const logWindow = document.getElementById('activityLog');
        logWindow.innerHTML = '';
        
        logEntries.forEach(entry => {
            logWindow.innerHTML += `<div>[${entry.timestamp}] ${entry.message}</div>`;
        });
    }
    
    document.addEventListener('DOMContentLoaded', function() {
        loadProfileCount();
        loadActivityLog();
        
        // Tự động làm mới dữ liệu mỗi 30 giây
        setInterval(function() {
            loadProfileCount();
            loadActivityLog();
        }, 30000);
    });
</script>
}