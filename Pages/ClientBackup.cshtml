@page
@model SteamCmdWeb.Pages.ClientBackupModel
@{
    ViewData["Title"] = "Backup & Import Profiles";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="bi bi-cloud-download me-2"></i>
                        Danh sách Backup
                    </h5>
                    <button id="refreshBtn" class="btn btn-outline-primary btn-sm">
                        <i class="bi bi-arrow-clockwise me-1"></i> Làm mới
                    </button>
                </div>
                <div class="card-body p-0">
                    <div class="backup-list-container" style="max-height: 500px; overflow-y: auto;">
                        <table class="table table-hover table-striped mb-0">
                            <thead class="thead-dark sticky-top">
                                <tr>
                                    <th>Tên file</th>
                                    <th>Thời gian</th>
                                    <th>Kích thước</th>
                                    <th class="text-center">Thao tác</th>
                                </tr>
                            </thead>
                            <tbody id="backupList">
                                <tr>
                                    <td colspan="4" class="text-center">
                                        <div class="spinner-border spinner-border-sm text-primary" role="status">
                                            <span class="visually-hidden">Đang tải...</span>
                                        </div>
                                        <span class="ms-2">Đang tải danh sách backup...</span>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="bi bi-cloud-upload me-2"></i>
                        Client Profile Import
                    </h5>
                </div>
                <div class="card-body">
                    <div id="uploadArea" class="border border-dashed rounded p-4 text-center mb-3">
                        <i class="bi bi-cloud-upload fs-2 text-muted"></i>
                        <p class="mt-2 mb-0">Kéo thả file JSON hoặc nhấn để chọn file</p>
                        <input type="file" id="fileUpload" accept=".json" hidden>
                    </div>
                    
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="skipDuplicateCheck">
                        <label class="form-check-label" for="skipDuplicateCheck">
                            Bỏ qua kiểm tra trùng lặp
                        </label>
                    </div>
                    
                    <div class="text-end">
                        <button id="importAllBtn" class="btn btn-primary" disabled>
                            <i class="bi bi-plus-circle me-1"></i> Import vào Profiles
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card mt-3">
        <div class="card-header">
            <h5 class="mb-0">
                <i class="bi bi-list-check me-2"></i>
                Chi tiết Profiles trong Backup
            </h5>
        </div>
        <div class="card-body">
            <div id="profilesContainer">
                <div class="text-center py-4">
                    <i class="bi bi-arrow-up-circle fs-3 d-block mb-2"></i>
                    <p class="text-muted">Chọn một file backup hoặc tải lên file để xem danh sách profiles</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const uploadArea = document.getElementById('uploadArea');
        const fileUpload = document.getElementById('fileUpload');
        const refreshBtn = document.getElementById('refreshBtn');

        // Tải danh sách backup
        function loadBackupList() {
            const backupList = document.getElementById('backupList');
            backupList.innerHTML = `
                <tr>
                    <td colspan="4" class="text-center">
                        <div class="spinner-border spinner-border-sm text-primary" role="status">
                            <span class="visually-hidden">Đang tải...</span>
                        </div>
                        <span class="ms-2">Đang tải danh sách backup...</span>
                    </td>
                </tr>
            `;

            fetch('/api/backup')
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    const backupList = document.getElementById('backupList');
                    backupList.innerHTML = '';

                    if (!data || data.length === 0) {
                        backupList.innerHTML = `
                            <tr>
                                <td colspan="4" class="text-center text-muted py-3">
                                    <i class="bi bi-info-circle me-2"></i>Chưa có backup nào
                                </td>
                            </tr>
                        `;
                        return;
                    }

                    data.forEach(backup => {
                        const tr = document.createElement('tr');
                        tr.innerHTML = `
                            <td>${backup.fileName}</td>
                            <td>${new Date(backup.creationTime).toLocaleString('vi-VN')}</td>
                            <td>${backup.sizeMB.toFixed(2)} MB</td>
                            <td class="text-center">
                                <div class="btn-group btn-group-sm" role="group">
                                    <button type="button" class="btn btn-info view-btn" data-filename="${backup.fileName}" title="Xem chi tiết">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                    <button type="button" class="btn btn-primary import-btn" data-filename="${backup.fileName}" title="Import">
                                        <i class="bi bi-cloud-download"></i>
                                    </button>
                                </div>
                            </td>
                        `;
                        
                        // Thêm sự kiện cho các nút
                        tr.querySelector('.view-btn').addEventListener('click', () => loadBackupProfiles(backup.fileName));
                        tr.querySelector('.import-btn').addEventListener('click', () => importBackup(backup.fileName));
                        
                        backupList.appendChild(tr);
                    });
                })
                .catch(error => {
                    console.error('Lỗi khi tải danh sách backup:', error);
                    const backupList = document.getElementById('backupList');
                    backupList.innerHTML = `
                        <tr>
                            <td colspan="4" class="text-center text-danger">
                                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                                Không thể tải danh sách backup
                            </td>
                        </tr>
                    `;
                });
        }

        // Tải profiles từ backup
        function loadBackupProfiles(fileName) {
            const container = document.getElementById('profilesContainer');
            container.innerHTML = `
                <div class="text-center py-4">
                    <div class="spinner-border text-primary" role="status"></div>
                    <p class="mt-2">Đang tải profiles...</p>
                </div>
            `;

            fetch(`/api/backup/load/${fileName}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    // Đảm bảo dữ liệu là một mảng
                    const profiles = Array.isArray(data) ? data : [];
                    
                    if (profiles.length === 0) {
                        container.innerHTML = `
                            <div class="alert alert-info text-center">
                                <i class="bi bi-info-circle me-2"></i>
                                Không có profiles trong backup này
                            </div>
                        `;
                        return;
                    }

                    let html = `
                        <div class="table-responsive">
                            <table class="table table-hover table-striped">
                                <thead>
                                    <tr>
                                        <th>Tên Game</th>
                                        <th>App ID</th>
                                        <th>Thư mục</th>
                                        <th>Tài khoản</th>
                                        <th>Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                    `;

                    profiles.forEach((profile, index) => {
                        const name = profile.Name || profile.name || 'Không xác định';
                        const appId = profile.AppID || profile.appID || 'N/A';
                        const installDir = profile.InstallDirectory || profile.installDirectory || 'N/A';
                        const username = profile.SteamUsername || profile.steamUsername || 'Không có';

                        html += `
                            <tr>
                                <td>${name}</td>
                                <td>${appId}</td>
                                <td>${installDir}</td>
                                <td>${username}</td>
                                <td>
                                    <button class="btn btn-sm btn-primary import-profile-btn" data-index="${index}">
                                        <i class="bi bi-cloud-download me-1"></i>Import
                                    </button>
                                </td>
                            </tr>
                        `;
                    });

                    html += `
                                </tbody>
                            </table>
                        </div>
                    `;

                    container.innerHTML = html;

                    // Thêm sự kiện cho các nút import profile
                    container.querySelectorAll('.import-profile-btn').forEach(btn => {
                        btn.addEventListener('click', () => {
                            const index = btn.getAttribute('data-index');
                            importSingleProfile(profiles[index]);
                        });
                    });
                })
                .catch(error => {
                    console.error('Lỗi khi tải profiles:', error);
                    container.innerHTML = `
                        <div class="alert alert-danger text-center">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>
                            Không thể tải profiles từ backup: ${error.message}
                        </div>
                    `;
                });
        }

        // Import single profile
        function importSingleProfile(profile) {
            const skipDuplicateCheck = document.getElementById('skipDuplicateCheck').checked;

            fetch(`/api/backup/migrate?skipDuplicateCheck=${skipDuplicateCheck}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify([profile])
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    showToast('success', `Đã import profile thành công. Thêm: ${result.added}, Bỏ qua: ${result.skipped}`);
                } else {
                    showToast('error', result.message || 'Lỗi khi import profile');
                }
            })
            .catch(error => {
                console.error('Lỗi:', error);
                showToast('error', 'Không thể import profile');
            });
        }

        // Hiển thị toast
        function showToast(type, message) {
            const toastContainer = document.createElement('div');
            toastContainer.classList.add('position-fixed', 'bottom-0', 'end-0', 'p-3');
            toastContainer.style.zIndex = 1070;

            const toastClass = type === 'success' ? 'bg-success' : 'bg-danger';
            const iconClass = type === 'success' ? 'bi-check-circle-fill' : 'bi-exclamation-triangle-fill';

            toastContainer.innerHTML = `
                <div class="toast align-items-center text-white ${toastClass}" role="alert">
                    <div class="d-flex">
                        <div class="toast-body">
                            <i class="bi ${iconClass} me-2"></i>
                            ${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            `;

            document.body.appendChild(toastContainer);
            const toast = new bootstrap.Toast(toastContainer.querySelector('.toast'));
            toast.show();
        }

        // Xử lý tải file
        function handleFileUpload(file) {
            if (!file || !file.name.endsWith('.json')) {
                showToast('error', 'Chỉ chấp nhận file JSON');
                return;
            }

            const container = document.getElementById('profilesContainer');
            container.innerHTML = `
                <div class="text-center py-4">
                    <div class="spinner-border text-primary" role="status"></div>
                    <p class="mt-2">Đang xử lý file...</p>
                </div>
            `;

            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    const data = JSON.parse(e.target.result);
                    const profiles = Array.isArray(data) ? data : [data];

                    // Hiển thị profiles
                    displayUploadedProfiles(profiles);
                } catch (error) {
                    console.error('Lỗi khi đọc file:', error);
                    container.innerHTML = `
                        <div class="alert alert-danger text-center">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>
                            Không thể đọc file JSON: ${error.message}
                        </div>
                    `;
                }
            };
            reader.readAsText(file);
        }

        // Hiển thị profiles đã tải lên
        function displayUploadedProfiles(profiles) {
            const container = document.getElementById('profilesContainer');
            const importAllBtn = document.getElementById('importAllBtn');
            
            if (profiles.length === 0) {
                container.innerHTML = `
                    <div class="alert alert-info text-center">
                        <i class="bi bi-info-circle me-2"></i>
                        Không có profiles để import
                    </div>
                `;
                importAllBtn.disabled = true;
                return;
            }

            let html = `
                <div class="table-responsive">
                    <table class="table table-hover table-striped">
                        <thead>
                            <tr>
                                <th style="width: 40px;">
                                    <input type="checkbox" id="selectAllProfiles" checked>
                                </th>
                                <th>Tên Game</th>
                                <th>App ID</th>
                                <th>Thư mục</th>
                                <th>Tài khoản</th>
                            </tr>
                        </thead>
                        <tbody>
            `;

            profiles.forEach((profile, index) => {
                const name = profile.Name || profile.name || 'Không xác định';
                const appId = profile.AppID || profile.appID || profile.app_id || 'N/A';
                const installDir = profile.InstallDirectory || profile.installDirectory || 'N/A';
                const username = profile.SteamUsername || profile.steamUsername || 'Không có';
                const isAnonymous = profile.AnonymousLogin || profile.anonymousLogin || false;

                html += `
                    <tr>
                        <td>
                            <input type="checkbox" class="profile-select" checked data-index="${index}">
                        </td>
                        <td>${name}</td>
                        <td>${appId}</td>
                        <td>${installDir}</td>
                        <td>
                            ${isAnonymous ? 
                                '<span class="badge bg-secondary">Ẩn danh</span>' : 
                                username
                            }
                        </td>
                    </tr>
                `;
            });

            html += `
                        </tbody>
                    </table>
                </div>
            `;

            container.innerHTML = html;
            importAllBtn.disabled = false;

            // Xử lý chọn/bỏ chọn tất cả
            const selectAllCheckbox = document.getElementById('selectAllProfiles');
            const profileCheckboxes = document.querySelectorAll('.profile-select');

            selectAllCheckbox.addEventListener('change', function() {
                profileCheckboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
                updateImportButtonText();
            });

            profileCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', updateImportButtonText);
            });

            // Cập nhật văn bản nút import
            function updateImportButtonText() {
                const selectedCount = document.querySelectorAll('.profile-select:checked').length;
                importAllBtn.innerHTML = `
                    <i class="bi bi-plus-circle me-1"></i> Import ${selectedCount} Profile${selectedCount !== 1 ? 's' : ''}
                `;
                importAllBtn.disabled = selectedCount === 0;
            }

            // Thiết lập ban đầu
            updateImportButtonText();

            // Xử lý import tất cả
            importAllBtn.onclick = importSelectedProfiles;
        }

        // Import các profile đã chọn
        function importSelectedProfiles() {
            const selectedCheckboxes = document.querySelectorAll('.profile-select:checked');
            const skipDuplicateCheck = document.getElementById('skipDuplicateCheck').checked;

            if (selectedCheckboxes.length === 0) {
                showToast('error', 'Vui lòng chọn ít nhất một profile');
                return;
            }

            // Thu thập các profile được chọn
            const selectedProfiles = Array.from(selectedCheckboxes).map(checkbox => {
                const index = parseInt(checkbox.getAttribute('data-index'));
                return profiles[index];
            });

            // Hiển thị loading
            const importBtn = document.getElementById('importAllBtn');
            const originalHtml = importBtn.innerHTML;
            importBtn.innerHTML = `
                <span class="spinner-border spinner-border-sm" role="status"></span> 
                Đang import...
            `;
            importBtn.disabled = true;

            // Gửi request import
            fetch(`/api/backup/migrate?skipDuplicateCheck=${skipDuplicateCheck}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(selectedProfiles)
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    showToast('success', `Import thành công: Thêm ${result.added}, Bỏ qua ${result.skipped}`);
                    
                    // Chuyển hướng hoặc làm mới danh sách
                    setTimeout(() => {
                        window.location.href = '/AppProfiles';
                    }, 1500);
                } else {
                    showToast('error', result.message || 'Lỗi khi import profiles');
                }
            })
            .catch(error => {
                console.error('Lỗi:', error);
                showToast('error', 'Không thể import profiles');
            })
            .finally(() => {
                importBtn.innerHTML = originalHtml;
                importBtn.disabled = false;
            });
        }

        // Sự kiện tải file
        uploadArea.addEventListener('click', () => fileUpload.click());
        fileUpload.addEventListener('change', function() {
            if (this.files.length > 0) {
                handleFileUpload(this.files[0]);
            }
        });

        // Kéo và thả file
        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.classList.add('border-primary');
        });

        uploadArea.addEventListener('dragleave', () => {
            uploadArea.classList.remove('border-primary');
        });

        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.classList.remove('border-primary');
            
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                handleFileUpload(files[0]);
            }
        });

        // Sự kiện làm mới
        refreshBtn.addEventListener('click', loadBackupList);

        // Khởi tạo
        loadBackupList();
    });
</script>

<style>
    .backup-list-container {
        scrollbar-width: thin;
        scrollbar-color: #6c757d #343a40;
    }

    .backup-list-container::-webkit-scrollbar {
        width: 10px;
    }

    .backup-list-container::-webkit-scrollbar-track {
        background: #343a40;
    }

    .backup-list-container::-webkit-scrollbar-thumb {
        background-color: #6c757d;
        border-radius: 6px;
        border: 3px solid #343a40;
    }

    .backup-list-container::-webkit-scrollbar-thumb:hover {
        background-color: #495057;
    }

    #uploadArea {
        transition: all 0.3s ease;
    }

    #uploadArea.border-primary {
        border-color: #0d6efd !important;
        background-color: rgba(13, 110, 253, 0.1);
    }
</style>
}