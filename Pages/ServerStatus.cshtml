@page
@model SteamCmdWeb.Pages.ServerStatusModel
@{
    ViewData["Title"] = "Trạng thái Server";
}

<div class="card mb-4">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">
            <i class="bi bi-hdd-network me-2"></i>
            Trạng thái Server
        </h5>
        <div>
            <button id="refreshBtn" class="btn btn-outline-primary btn-sm me-2">
                <i class="bi bi-arrow-clockwise me-1"></i> Làm mới
            </button>
        </div>
    </div>
    <div class="card-body">
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="server-status @(Model.IsServerRunning ? "online" : "offline")">
                    <span class="status-indicator @(Model.IsServerRunning ? "online" : "offline")"></span>
                    <strong>Trạng thái hiện tại:</strong> @(Model.IsServerRunning ? "Đang hoạt động" : "Đã dừng")
                </div>
                
                <div class="mt-3">
                    <p><strong>Cổng:</strong> 61188</p>
                    <p><strong>Thời gian chạy:</strong> <span id="uptime">@Model.Uptime</span></p>
                    <p><strong>Tổng kết nối:</strong> <span id="connectionCount">@Model.ConnectionCount</span></p>
                    <p><strong>Địa chỉ IP truy cập:</strong> <span id="ipAddress">@Model.ServerIP</span></p>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">Tài nguyên hệ thống</h6>
                    </div>
                    <div class="card-body">
                        <div class="mb-2">
                            <label class="form-label mb-0">CPU Usage</label>
                            <div class="progress">
                                <div id="cpuBar" class="progress-bar" role="progressbar" style="width: @Model.CpuUsage%" aria-valuenow="@Model.CpuUsage" aria-valuemin="0" aria-valuemax="100">@Model.CpuUsage%</div>
                            </div>
                        </div>
                        <div class="mb-2">
                            <label class="form-label mb-0">Memory Usage</label>
                            <div class="progress">
                                <div id="memoryBar" class="progress-bar bg-info" role="progressbar" style="width: @Model.MemoryUsage%" aria-valuenow="@Model.MemoryUsage" aria-valuemin="0" aria-valuemax="100">@Model.MemoryUsage%</div>
                            </div>
                        </div>
                        <div>
                            <label class="form-label mb-0">Disk Usage</label>
                            <div class="progress">
                                <div id="diskBar" class="progress-bar bg-warning" role="progressbar" style="width: @Model.DiskUsage%" aria-valuenow="@Model.DiskUsage" aria-valuemin="0" aria-valuemax="100">@Model.DiskUsage%</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">Nhật ký Server</h6>
            </div>
            <div class="card-body">
                <div class="log-window" id="serverLog">
                    @foreach (var logEntry in Model.ServerLogs)
                    {
                        <div>[<span class="text-info">@logEntry.Timestamp</span>] <span class="@(logEntry.IsError ? "text-danger" : "")">@logEntry.Message</span></div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">Các kết nối gần đây</h6>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>IP</th>
                                <th>Thời gian</th>
                                <th>Hành động</th>
                                <th>Trạng thái</th>
                            </tr>
                        </thead>
                        <tbody id="connectionsTable">
                            @foreach (var connection in Model.RecentConnections)
                            {
                                <tr>
                                    <td>@connection.IPAddress</td>
                                    <td>@connection.Timestamp</td>
                                    <td>@connection.Action</td>
                                    <td>
                                        <span class="badge @(connection.Success ? "bg-success" : "bg-danger")">
                                            @(connection.Success ? "Thành công" : "Thất bại")
                                        </span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">Cấu hình Server</h6>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label">Auth Token</label>
                    <div class="input-group">
                        <input type="password" class="form-control" id="authToken" value="simple_auth_token" readonly>
                        <button class="btn btn-outline-primary" type="button" id="showTokenBtn">
                            <i class="bi bi-eye"></i>
                        </button>
                        <button class="btn btn-outline-secondary" type="button" id="copyTokenBtn">
                            <i class="bi bi-clipboard"></i>
                        </button>
                    </div>
                    <div class="form-text">Token xác thực cho client kết nối đến server</div>
                </div>
                
                <div class="mb-3">
                    <label class="form-label">Thư mục Data</label>
                    <input type="text" class="form-control" value="@Model.DataFolder" readonly>
                </div>
                
                <div class="mb-3">
                    <label class="form-label">Thư mục Profiles</label>
                    <input type="text" class="form-control" value="@Model.ProfilesFolder" readonly>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Hiển thị/ẩn token
        document.getElementById('showTokenBtn').addEventListener('click', function() {
            const tokenInput = document.getElementById('authToken');
            if (tokenInput.type === 'password') {
                tokenInput.type = 'text';
                this.innerHTML = '<i class="bi bi-eye-slash"></i>';
            } else {
                tokenInput.type = 'password';
                this.innerHTML = '<i class="bi bi-eye"></i>';
            }
        });
        
        // Sao chép token
        document.getElementById('copyTokenBtn').addEventListener('click', function() {
            const tokenInput = document.getElementById('authToken');
            tokenInput.select();
            document.execCommand('copy');
            alert('Đã sao chép token vào clipboard!');
        });
        
        // Làm mới dữ liệu
        document.getElementById('refreshBtn').addEventListener('click', function() {
            location.reload();
        });
        
        // Tự động làm mới dữ liệu mỗi 30 giây
        setInterval(function() {
            // Ở đây chúng ta có thể sử dụng fetch để lấy dữ liệu mới mà không phải làm mới trang
            // Nhưng vì đây là demo, chúng ta chỉ làm mới trang
            location.reload();
        }, 30000);
    });
</script>
}